#! /bin/bash
#! /usr/bin/env bash
set -o nounset
set -o errexit
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR
set -o errtrace
set -o pipefail
DEFAULT_IFS="${IFS}"
SAFER_IFS=$'\n\t'
IFS="${SAFER_IFS}"
_ME=$(basename "${0}")

_print_help() {
  cat <<HEREDOC
                 __               .__
__  _  _______ _/  |_  ___________|  |   ____   ____ ______
\ \/ \/ /\__  \\   __\/ __ \_  __ \  |  /  _ \ /  _ \\____ \
 \     /  / __ \|  | \  ___/|  | \/  |_(  <_> |  <_> )  |_> >
  \/\_/  (____  /__|  \___  >__|  |____/\____/ \____/|   __/
              \/          \/                         |__|
The JDash Go code builder
Usage:
  ${_ME} [--help] [run]
  ${_ME} -h | --help
Options:
  -h --help     Show this screen.
  run           Start and run JDash
HEREDOC
}

###############################################################################
# Program Functions
###############################################################################

_run() {
    echo "Doing Go build"
    go install
    echo "Starting with Heroku"
    heroku local
}

_simple() {
    root_dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
    root_dir_name=$(basename "$root_dir")
    cd "$root_dir"

    if [ "$1" == 'run' ] ; then
        echo "Running project"
        _run
    else
        _print_help
    fi
}

###############################################################################
# Main
###############################################################################

# _main()
#
# Usage:
#   _main [<options>] [<arguments>]
#
# Description:
#   Entry point for the program, handling basic option parsing and dispatching.
_main() {
  # Avoid complex option parsing when only one program option is expected.
  if [[ "${1:-}" =~ ^-h|--help$  ]] || [ $# -lt "1" ]
  then
    _print_help
  else
    _simple "$@"
  fi
}

# Call `_main` after everything has been defined.
_main "$@"